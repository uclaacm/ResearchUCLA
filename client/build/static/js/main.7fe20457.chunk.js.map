{"version":3,"sources":["ucla-samueli-logo-white.png","components/NavBar/NavBar.jsx","pages/FacultyPage/FacultyPage.jsx","pages/ResearchPage/ResearchPage.jsx","pages/NewsPage/NewsPage.jsx","pages/ResourcesPage/ResourcesPage.jsx","pages/Main/Main.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","moveMenu","state","toggled","document","getElementById","style","transform","handleWindowSizeChange","setState","width","window","innerWidth","toggleMenu","console","log","addEventListener","removeEventListener","react_default","a","createElement","id","rel","href","integrity","crossorigin","onClick","class","Link","to","className","src","uclaLogo","Component","FacultyPage","ResearchPage","NewsPage","ResourcesPage","Main","BrowserRouter","components_NavBar_NavBar","Route","path","component","App","pages_Main_Main","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2ZCgIzBC,cA1HX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAgBVQ,SAAW,WACHP,EAAKQ,MAAMC,SACXC,SAASC,eAAe,eAAeC,MAAMC,UAAY,oBACzDH,SAASC,eAAe,gBAAgBC,MAAMC,UAAY,kBAG1DH,SAASC,eAAe,eAAeC,MAAMC,UAAY,iBACzDH,SAASC,eAAe,gBAAgBC,MAAMC,UAAY,iBAxB/Cb,EA4BnBc,uBAAyB,WACrBd,EAAKe,SAAS,CACVC,MAAOC,OAAOC,WACdT,SAAS,KA/BET,EAmCnBmB,WAAa,WACTnB,EAAKe,SAAS,CACVN,SAAUT,EAAKQ,MAAMC,SACtB,WACCW,QAAQC,IAAI,qBAAsBrB,EAAKQ,MAAMC,WAE7CT,EAAKQ,MAAMQ,OAAS,KACpBhB,EAAKO,YAxCTP,EAAKQ,MAAQ,CACTC,SAAS,EACTO,MAAOC,OAAOC,YAJHlB,mFASfG,KAAKgB,aACLF,OAAOK,iBAAiB,SAAUnB,KAAKW,uEAIvCG,OAAOM,oBAAoB,SAAUpB,KAAKW,yDAmC1C,OAFkBX,KAAKK,MAAfQ,OACkB,IAGlBQ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBACJH,EAAAC,EAAAC,cAAA,QAAME,IAAI,aAAaC,KAAK,0DAA0DC,UAAU,0EAA0EC,YAAY,cACtLP,EAAAC,EAAAC,cAAA,UAAQC,GAAG,eAAeK,QAAS7B,KAAKgB,YACpCK,EAAAC,EAAAC,cAAA,KAAGO,MAAM,uBAEbT,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBACJH,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,KACLX,EAAAC,EAAAC,cAAA,uCAA8BF,EAAAC,EAAAC,cAAA,WAA9B,sBAKRF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,eACJH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,4BACJH,EAAAC,EAAAC,cAAA,OAAKU,UAAU,oBACXZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,aAAYX,EAAAC,EAAAC,cAAA,uBAEzBF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,oBACXZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,YAAWX,EAAAC,EAAAC,cAAA,sBAExBF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,oBACXZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,cAAaX,EAAAC,EAAAC,cAAA,wBAE1BF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,oBACXZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,SAAQX,EAAAC,EAAAC,cAAA,sBAUjCF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBACJH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACJH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SACJH,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,KACLX,EAAAC,EAAAC,cAAA,uCAA8BF,EAAAC,EAAAC,cAAA,WAA9B,sBAKRF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QACJH,EAAAC,EAAAC,cAAA,OAAKW,IAAKC,OAEdd,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QACJH,EAAAC,EAAAC,cAAA,OAAKU,UAAU,aACXZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,aAAYX,EAAAC,EAAAC,cAAA,uBAEzBF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,aACXZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,YAAWX,EAAAC,EAAAC,cAAA,sBAExBF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,aACXZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,cAAaX,EAAAC,EAAAC,cAAA,wBAE1BF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,aACXZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,SAAQX,EAAAC,EAAAC,cAAA,6BA/G5Ba,aCaNC,0LAZP,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,uBACJH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,yCATUa,cCaXE,0LAZP,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,yBACJH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,0CARWa,cCcZG,0LAXP,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBACJH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,sCAROa,cCaRI,0LAXP,OACInB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,yBACJH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,2CARYa,8BCsBbK,mLAfP,OACIpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBACJH,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAaR,IACrCjB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAaT,IACpChB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAaP,IACjClB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAaN,aATvCJ,aCGJW,mLANX,OACE1B,EAAAC,EAAAC,cAACyB,EAAD,aAHYZ,aCQEa,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAAShD,SAASC,eAAe,SD2H3C,kBAAmBgD,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7fe20457.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ucla-samueli-logo-white.b08966e2.png\";","import React, { Component } from 'react';\nimport uclaLogo from '../../ucla-samueli-logo-white.png';\nimport './NavBar.scss';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toggled: false,\n            width: window.innerWidth,\n        };\n    }\n\n    componentDidMount() {\n        this.toggleMenu();\n        window.addEventListener(\"resize\", this.handleWindowSizeChange);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowSizeChange);\n    }\n\n    moveMenu = () => {\n        if (this.state.toggled) {\n            document.getElementById(\"menu-mobile\").style.transform = \"translateX(-100%)\";\n            document.getElementById(\"toggleButton\").style.transform = \"rotate(90deg)\";\n        }\n        else {\n            document.getElementById(\"menu-mobile\").style.transform = \"translateX(0%)\";\n            document.getElementById(\"toggleButton\").style.transform = \"rotate(0deg)\";\n        }\n    }\n\n    handleWindowSizeChange = () => {\n        this.setState({\n            width: window.innerWidth,\n            toggled: true,\n        })\n    };\n\n    toggleMenu = () => {\n        this.setState({\n            toggled: !this.state.toggled\n        }, () => {\n            console.log('state was changed!', this.state.toggled)\n        })\n        if (this.state.width <= 800) {\n            this.moveMenu();\n        }\n    }\n\n    render() {\n        const { width } = this.state;\n        const isMobile = width <= 800;\n        if (isMobile) {\n            return (\n                <div id=\"navbar-wrapper\">\n                    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.1/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\"></link>\n                    <button id=\"toggleButton\" onClick={this.toggleMenu}>\n                        <i class=\"fas fa-bars fa-2x\"></i>\n                    </button>\n                    <div id=\"title-mobile\">\n                        <style>@import url('https://fonts.googleapis.com/css?family=Montserrat');</style>\n                        <Link to=\"/\">\n                            <h1>ARTIFICIAL INTELLIGENCE + <br />\n                                MACHINE LEARNING\n                            </h1>\n                        </Link>\n                    </div>\n                    <div id=\"menu-mobile\">\n                        <div id=\"menu-item-wrapper-mobile\">\n                            <div className=\"menu-item-mobile\">\n                                <Link to=\"/research\"><p>RESEARCH</p></Link>\n                            </div>\n                            <div className=\"menu-item-mobile\">\n                                <Link to=\"/faculty\"><p>FACULTY</p></Link>\n                            </div>\n                            <div className=\"menu-item-mobile\">\n                                <Link to=\"/resources\"><p>RESOURCES</p></Link>\n                            </div>\n                            <div className=\"menu-item-mobile\">\n                                <Link to=\"/news\"><p>NEWS</p></Link>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            );\n        }\n        else {\n            return (\n                <div id=\"navbar-wrapper\">\n                    <div id=\"navbar\">\n                        <div id=\"title\">\n                            <style>@import url('https://fonts.googleapis.com/css?family=Montserrat');</style>\n                            <Link to=\"/\">\n                                <h1>ARTIFICIAL INTELLIGENCE + <br />\n                                    MACHINE LEARNING\n                            </h1>\n                            </Link>\n                        </div>\n                        <div id=\"logo\">\n                            <img src={uclaLogo} />\n                        </div>\n                        <div id=\"menu\">\n                            <div className=\"menu-item\">\n                                <Link to=\"/research\"><p>RESEARCH</p></Link>\n                            </div>\n                            <div className=\"menu-item\">\n                                <Link to=\"/faculty\"><p>FACULTY</p></Link>\n                            </div>\n                            <div className=\"menu-item\">\n                                <Link to=\"/resources\"><p>RESOURCES</p></Link>\n                            </div>\n                            <div className=\"menu-item\">\n                                <Link to=\"/news\"><p>NEWS</p></Link>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n            );\n        }\n    }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport './style.scss';\n\n\nclass FacultyPage extends Component {\n    render() {\n        return (\n            <div id=\"FacultyPage-wrapper\">\n                <h1>This is FacultyPage</h1>\n                <h1>This is FacultyPage</h1>\n                <h1>This is FacultyPage</h1>\n                <h1>This is FacultyPage</h1>\n                <h1>This is FacultyPage</h1>\n                <h1>This is FacultyPage</h1>\n            </div>\n        );\n    }\n}\nexport default FacultyPage;","import React, { Component } from 'react';\nimport './style.scss';\n\nclass ResearchPage extends Component {\n    render() {\n        return (\n            <div id=\"ResourcesPage-wrapper\">\n                <h1>This is ResearchPage</h1>\n                <h1>This is ResearchPage</h1>\n                <h1>This is ResearchPage</h1>\n                <h1>This is ResearchPage</h1>\n                <h1>This is ResearchPage</h1>\n            </div>\n        );\n    }\n}\n\nexport default ResearchPage;","import React, { Component } from 'react';\nimport './style.scss';\n\n\nclass NewsPage extends Component {\n    render() {\n        return (\n            <div id=\"NewsPage-wrapper\">\n                <h1>This is NewsPage</h1>\n                <h1>This is NewsPage</h1>\n                <h1>This is NewsPage</h1>\n                <h1>This is NewsPage</h1>\n                <h1>This is NewsPage</h1>\n            </div>\n        );\n    }\n}\nexport default NewsPage;","import React, { Component } from 'react';\nimport './style.scss';\n\n\nclass ResourcesPage extends Component {\n    render() {\n        return (\n            <div id=\"ResourcesPage-wrapper\">\n                <h1>This is ResourcesPage</h1>\n                <h1>This is ResourcesPage</h1>\n                <h1>This is ResourcesPage</h1>\n                <h1>This is ResourcesPage</h1>\n                <h1>This is ResourcesPage</h1>\n            </div>\n        );\n    }\n}\nexport default ResourcesPage;","import React, { Component } from 'react';\nimport './style.scss';\nimport NavBar from '../../components/NavBar/NavBar';\nimport FacultyPage from '../../pages/FacultyPage/FacultyPage';\nimport ResearchPage from '../../pages/ResearchPage/ResearchPage';\nimport NewsPage from '../../pages/NewsPage/NewsPage';\nimport ResourcesPage from '../../pages/ResourcesPage/ResourcesPage';\nimport {BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass Main extends Component {\n    render() {\n        return (\n            <Router>\n                <div id=\"main-wrapper\">\n                    <NavBar></NavBar>\n                    <Route path=\"/research\" component = {ResearchPage} />\n                    <Route path=\"/faculty\" component = {FacultyPage} />\n                    <Route path=\"/news\" component = {NewsPage} />\n                    <Route path=\"/resources\" component = {ResourcesPage} />\n                    \n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport './App.scss';\nimport Main from './pages/Main/Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <Main></Main>      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}